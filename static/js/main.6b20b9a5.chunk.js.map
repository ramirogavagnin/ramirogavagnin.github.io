{"version":3,"sources":["assets/images/vader.png","redux/types/index.js","utils/requests.js","utils/api.js","redux/actions/index.js","navigation/routes.js","components/Layout.jsx","containers/Home.jsx","components/TableWrapper.jsx","components/DetailWrapper.jsx","components/Title.jsx","components/SearchInput.jsx","components/CustomTable.jsx","components/Text.jsx","containers/Characters.jsx","utils/translate.js","containers/Movies.jsx","containers/Loading.jsx","containers/NotFound.jsx","App.js","serviceWorker.js","redux/reducers/index.js","utils/contains.js","redux/store/index.js","index.js"],"names":["module","exports","get","endpoint","payload","a","async","url","fetch","response","ok","json","data","error","status","message","API_URL","endpoints","characters","films","search","setCharacters","type","types","setMovies","setActiveMovie","setSearchCharacter","setSearchCharacterActive","handleNavigation","dispatch","key","history","item","push","setIsLoading","getCharacters","results","map","filmsList","length","film","filmData","getMovies","useStyles","makeStyles","theme","root","display","backgroundColor","padding","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","transparent","backgroundActiveItem","menuButton","marginRight","spacing","menuIcon","fontSize","menuTitle","fontFamily","drawerTitle","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","flexDirection","backdrop","zIndex","color","home","routes","movies","menuLinks","label","icon","mapDispatchToProps","connect","state","isLoading","withRouter","props","children","classes","useTheme","useState","open","setOpen","handleDrawerClose","pathname","location","className","Backdrop","CircularProgress","CssBaseline","AppBar","position","clsx","red","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","Grid","container","Home","style","height","paddingTop","TableWrapper","matches","DetailWrapper","right","top","bottom","wrap","overflowY","Title","title","clearActiveCharacter","searchCharacterActive","searchActive","input","flex","iconButton","inputValue","setInputValue","useEffect","Paper","component","InputBase","placeholder","value","onChange","e","target","CustomTable","seeMore","active","setActiveItem","isActive","borderRadius","tableWrapper","overflow","tableHead","minWidth","buttonContainer","margin","textActiveItem","fontWeight","textItem","Table","TableHead","TableRow","TableCell","TableBody","Object","keys","name","hover","role","tabIndex","borderBottomColor","textAlign","Fab","disabled","next","Text","text","setActiveCharacter","searchCharacter","activeCharacter","searchedCharacter","useMediaQuery","mass","eye_color","xs","eyeColor","eyeColorTranslate","heightTranslate","massTranslate","textDecoration","cursor","setSearchMovie","setSearchMovieActive","activeMovie","searchedMovie","searchMovieActive","director","producer","release_date","Loading","src","Logo","alt","NotFound","clearLoadingPage","loadingPage","window","addEventListener","removeEventListener","exact","path","Characters","Movies","Boolean","hostname","match","reducers","action","result","_","forEach","findIndex","characterItem","concat","searchResults","filter","query","formatTitle","toLowerCase","formatQuery","includes","contains","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b20b9a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vader.b60bff27.png\";","export default {\n    SET_CHARACTERS: 'set_characters',\n    SET_MOVIES: 'set_movies',\n    SET_ACTIVE_CHARACTER: 'set_active_character',\n    SET_ACTIVE_MOVIE: 'set_active_movie',\n    SET_SEARCH_CHARACTER: 'set_search_character',\n    SET_SEARCH_CHARACTER_ACTIVE: 'set_search_character_active',\n    SET_SEARCH_MOVIE: 'set_search_movie',\n    SET_SEARCH_MOVIE_ACTIVE: 'set_search_movie_active',\n    CLEAR_ACTIVE_CHARACTER: 'clear_active_character',\n    CLEAR_LOADING_PAGE: 'clear_loading_page',\n    // States\n    IS_LOADING: 'is_loading',\n}\n","export const get = async (endpoint, payload) => {\n    try {\n        let url = endpoint\n\n        if (payload) {\n            url = `${url}${payload}`\n        }\n\n        const response = await fetch(url)\n\n        if (response.ok) {\n            const data = await response.json()\n            return { data, error: null }\n        } else {\n            return { error: response.status }\n        }\n    } catch (error) {\n        return { error: error.message }\n    }\n}\n","export const API_URL = 'https://swapi.co/api'\n\nexport const endpoints = {\n    characters: `${API_URL}/people/`,\n    films: `${API_URL}/films/`,\n    search: `${API_URL}/people/?search=`,\n}\n","import types from '../types'\nimport { get } from '../../utils/requests'\nimport { endpoints } from '../../utils/api'\n\nconst { characters, films, search } = endpoints\n\n//Actions\n\nexport const setCharacters = payload => ({\n    type: types.SET_CHARACTERS,\n    payload: payload,\n})\n\nexport const setMovies = payload => ({\n    type: types.SET_MOVIES,\n    payload: payload,\n})\n\nexport const setActiveCharacter = payload => ({\n    type: types.SET_ACTIVE_CHARACTER,\n    payload: payload,\n})\n\nexport const setActiveMovie = payload => ({\n    type: types.SET_ACTIVE_MOVIE,\n    payload: payload,\n})\n\nexport const setSearchCharacter = payload => ({\n    type: types.SET_SEARCH_CHARACTER,\n    payload: payload,\n})\n\nexport const setSearchCharacterActive = payload => ({\n    type: types.SET_SEARCH_CHARACTER_ACTIVE,\n    payload: payload,\n})\n\nexport const setSearchMovie = payload => ({\n    type: types.SET_SEARCH_MOVIE,\n    payload: payload,\n})\n\nexport const setSearchMovieActive = payload => ({\n    type: types.SET_SEARCH_MOVIE_ACTIVE,\n    payload: payload,\n})\n\nexport const clearActiveCharacter = payload => ({\n    type: types.CLEAR_ACTIVE_CHARACTER,\n    payload: payload,\n})\n\nexport const clearLoadingPage = payload => ({\n    type: types.CLEAR_LOADING_PAGE,\n    payload: payload,\n})\n\nexport const handleNavigation = payload => {\n    return dispatch => {\n        const { key, history, item } = payload\n        if (item) {\n            dispatch(setActiveMovie(item))\n        }\n        history.push(key)\n    }\n}\n\n// States\n\nexport const setIsLoading = payload => ({\n    type: types.IS_LOADING,\n    payload,\n})\n\n// Async Actions\n\nexport const getCharacters = payload => {\n    return async dispatch => {\n        try {\n            dispatch(setIsLoading(true))\n            const getCharacters = payload\n                ? await get(payload)\n                : await get(characters)\n            const { data, error } = getCharacters\n            if (!error) {\n                const results = data.results.map(item => {\n                    return { ...item, filmsList: [] }\n                })\n                results.map(async item => {\n                    const { films, filmsList } = item\n                    if (films.length > 0) {\n                        for (let film of films) {\n                            const response = await fetch(film)\n                            if (response.ok) {\n                                const filmData = await response.json()\n                                filmsList.push(filmData)\n                            }\n                        }\n                    }\n                })\n\n                data.results = results\n\n                if (payload) {\n                    dispatch(setCharacters(data))\n                    dispatch(setIsLoading(false))\n                } else {\n                    // Si no hay payload es mi petición inicial, entonces => movies\n\n                    const getMovies = await get(films)\n                    if (!getMovies.error) {\n                        dispatch(setMovies(getMovies.data))\n                        dispatch(setCharacters(data))\n                        dispatch(setIsLoading(false))\n                    } else {\n                        dispatch(setCharacters(data))\n                        dispatch(setIsLoading(false))\n                    }\n                }\n            } else {\n                dispatch(setIsLoading(false))\n            }\n        } catch (error) {\n            dispatch(setIsLoading(false))\n        }\n    }\n}\n\nexport const searchCharacter = payload => {\n    return async dispatch => {\n        try {\n            if (payload) {\n                dispatch(setIsLoading(true))\n                const characters = await get(search, payload)\n                const { data, error } = characters\n                if (!error) {\n                    const results = data.results.map(item => {\n                        return { ...item, filmsList: [] }\n                    })\n\n                    results.map(async item => {\n                        const { films, filmsList } = item\n                        if (films.length > 0) {\n                            for (let film of films) {\n                                const response = await fetch(film)\n                                if (response.ok) {\n                                    const filmData = await response.json()\n                                    filmsList.push(filmData)\n                                }\n                            }\n                        }\n                    })\n\n                    data.results = results\n\n                    dispatch(setSearchCharacterActive(true))\n                    dispatch(setSearchCharacter(data))\n                    dispatch(setIsLoading(false))\n                }\n            } else {\n                dispatch(setSearchCharacter({}))\n            }\n        } catch (error) {\n            dispatch(setIsLoading(false))\n        }\n    }\n}\n","export default {\n    home: '/',\n    characters: '/characters',\n    movies: '/movies',\n}\n","import React, { useState, Fragment } from 'react'\nimport clsx from 'clsx'\n\nimport routes from '../navigation/routes'\n\nimport { connect } from 'react-redux'\nimport { handleNavigation } from '../redux/actions'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport HomeIcon from '@material-ui/icons/Home'\nimport PeopleIcon from '@material-ui/icons/People'\nimport MovieIcon from '@material-ui/icons/Movie'\nimport Grid from '@material-ui/core/Grid'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport '../App.css'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        backgroundColor: 'black',\n        padding: 0,\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: '#000000',\n    },\n\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth})`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n\n    transparent: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    },\n    backgroundActiveItem: {\n        backgroundColor: '#C6C6C6',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuIcon: {\n        fontSize: '12px + 2vmin',\n    },\n    menuTitle: {\n        fontSize: '8px + 2vmin',\n        fontFamily: 'Starwars',\n    },\n    drawerTitle: {\n        fontSize: '8px + 2vmin',\n        fontFamily: 'Starwars',\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}))\n\nconst { home, characters, movies } = routes\n\nconst menuLinks = [\n    { key: home, label: 'Home', icon: <HomeIcon /> },\n    { key: characters, label: 'Personajes', icon: <PeopleIcon /> },\n    { key: movies, label: 'Películas', icon: <MovieIcon /> },\n]\nconst Layout = props => {\n    const { children, handleNavigation, isLoading, characters, history } = props\n\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState(false)\n\n    const handleDrawerOpen = () => {\n        setOpen(true)\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false)\n    }\n\n    const { transparent, backgroundActiveItem } = classes\n\n    const { pathname } = history.location\n\n    return (\n        <div className=\"App\">\n            <Backdrop className={classes.backdrop} open={isLoading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(\n                        classes.appBar,\n                        pathname === home && transparent,\n                        classes.red,\n                        {\n                            [classes.appBarShift]: open,\n                        }\n                    )}\n                >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(\n                                classes.menuButton,\n                                open && classes.hide\n                            )}\n                        >\n                            <MenuIcon className={clsx(classes.menuIcon)} />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            noWrap\n                            className={clsx(classes.menuTitle)}\n                        >\n                            STAR WARS\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <h1 className={classes.drawerTitle}>STAR WARS</h1>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {menuLinks.map((item, index) => {\n                            const { key, label, icon } = item\n                            return (\n                                <Fragment key={key}>\n                                    <ListItem\n                                        button\n                                        className={clsx(\n                                            pathname === key &&\n                                                backgroundActiveItem\n                                        )}\n                                        onClick={() => {\n                                            handleNavigation({ key, history })\n                                            handleDrawerClose()\n                                        }}\n                                    >\n                                        <ListItemIcon>{icon}</ListItemIcon>\n                                        <ListItemText primary={label} />\n                                    </ListItem>\n                                    <Divider />\n                                </Fragment>\n                            )\n                        })}\n                    </List>\n                </Drawer>\n                <main className={classes.content}>\n                    <Grid container>{children}</Grid>\n                </main>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    const { characters, isLoading } = state\n    return {\n        characters,\n        isLoading,\n    }\n}\n\nconst mapDispatchToProps = {\n    handleNavigation,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Layout))\n","import React from 'react'\nimport '../App.css'\n\nconst Home = props => {\n    return (\n        <div\n            className=\"background-home\"\n            style={{\n                height: '100vh',\n                width: '100vw',\n                backgroundColor: '#000000',\n                paddingTop: '10vh',\n            }}\n        ></div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst TableWrapper = ({ children, matches }) => {\n    const useStyles = makeStyles({\n        root: {\n            width: matches ? '40%' : '100%',\n            paddingTop: '9vh',\n            marginLeft: 0,\n        },\n    })\n\n    const classes = useStyles()\n\n    return <div className={classes.root}>{children}</div>\n}\n\nexport default TableWrapper\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst DetailWrapper = ({ children, matches }) => {\n    const useStyles = makeStyles({\n        root: {\n            backgroundColor: '#CB202D',\n            width: matches ? '60%' : '100%',\n            position: matches ? 'fixed' : 'relative',\n            right: matches ? 0 : 'none',\n            top: matches ? 0 : 'none',\n            bottom: 0,\n            height: matches ? '100vh' : '100%',\n            padding: matches ? '12vh 2vw 2vw 2vw' : '0 3vw 3vw 3vw',\n        },\n        wrap: {\n            overflowY: 'scroll',\n            height: '100%',\n        },\n    })\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrap}>{children}</div>\n        </div>\n    )\n}\n\nexport default DetailWrapper\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst Title = ({ children, matches, style }) => {\n    const useStyles = makeStyles({\n        title: {\n            color: '#fff',\n            fontFamily: 'Starwars',\n            fontSize: matches ? '6vmin' : '8vmin',\n        },\n    })\n    const classes = useStyles()\n\n    return (\n        <h1 className={classes.title} style={style}>\n            {children}\n        </h1>\n    )\n}\n\nexport default Title\n","import React, { useState, useEffect } from 'react'\n\nimport { connect } from 'react-redux'\nimport { clearActiveCharacter } from '../redux/actions'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst SearchInput = ({\n    matches,\n    search,\n    searchActive,\n    searchCharacterActive,\n    clearActiveCharacter,\n}) => {\n    const useStyles = makeStyles(theme => ({\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            width: matches ? '22vw' : '55vw',\n            height: matches ? '8vh' : '6.5vh',\n        },\n        input: {\n            flex: 1,\n        },\n        iconButton: {\n            padding: 10,\n        },\n    }))\n    const classes = useStyles()\n\n    const [inputValue, setInputValue] = useState('')\n\n    useEffect(() => {\n        if (!inputValue) {\n            searchActive(false)\n        }\n\n        return () => {\n            if (searchCharacterActive) {\n                clearActiveCharacter()\n            } else {\n                searchActive(false)\n            }\n        }\n    }, [inputValue])\n\n    const handleOnSearch = () => {\n        if (inputValue) {\n            search(inputValue)\n        }\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Buscar...\"\n                value={inputValue}\n                onChange={e => setInputValue(e.target.value)}\n            />\n            <IconButton\n                className={classes.iconButton}\n                aria-label=\"search\"\n                onClick={handleOnSearch}\n            >\n                <SearchIcon />\n            </IconButton>\n        </Paper>\n    )\n}\n\nconst mapStateToProps = state => {\n    const { searchCharacterActive } = state\n    return {\n        searchCharacterActive,\n    }\n}\n\nconst mapDispatchToProps = {\n    clearActiveCharacter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput)\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport Fab from '@material-ui/core/Fab'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport Title from './Title'\nimport SearchInput from './SearchInput'\n\nconst CustomTable = ({\n    matches,\n    data,\n    seeMore,\n    characters,\n    active,\n    setActiveItem,\n    search,\n    searchActive,\n    isActive,\n}) => {\n    const useStyles = makeStyles({\n        root: {\n            width: '100%',\n            borderRadius: 0,\n        },\n        tableWrapper: {\n            height: matches ? '100vh' : '100%',\n            overflow: 'auto',\n        },\n        tableHead: {\n            minWidth: 170,\n            backgroundColor: '#2D2D2D',\n            zIndex: 0,\n            paddingTop: matches ? 25 : 20,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n        },\n        buttonContainer: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            display: 'flex',\n        },\n        button: {\n            width: '60%',\n            margin: '5vmin 2vmin 5vmin 2vmin',\n        },\n        backgroundActiveItem: {\n            backgroundColor: '#C6C6C6',\n        },\n        textActiveItem: {\n            fontWeight: 'bold',\n            fontSize: matches ? '3.5vmin' : '5.5vmin',\n        },\n        textItem: {\n            fontWeight: 'normal',\n            fontSize: matches ? '2.5vmin' : '4.5vmin',\n        },\n    })\n    const classes = useStyles()\n\n    const { backgroundActiveItem, textActiveItem, textItem } = classes\n\n    return (\n        <Paper className={classes.root}>\n            <div className={classes.tableWrapper}>\n                <Table aria-label=\"table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.tableHead}>\n                                <h3 style={{ color: 'white', margin: 0 }}>\n                                    {characters ? 'Personajes' : 'Películas'}\n                                </h3>\n                                <SearchInput\n                                    matches={matches}\n                                    search={search}\n                                    searchActive={searchActive}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(data).length > 0 &&\n                        data.results.length > 0 ? (\n                            data.results.map(item => {\n                                const { name, title, url } = item\n                                return (\n                                    <TableRow\n                                        hover\n                                        className={clsx(\n                                            active &&\n                                                active.url === url &&\n                                                backgroundActiveItem\n                                        )}\n                                        role=\"checkbox\"\n                                        tabIndex={-1}\n                                        key={url}\n                                        onClick={() => setActiveItem(item)}\n                                    >\n                                        <TableCell\n                                            className={clsx(\n                                                active && active.url === url\n                                                    ? textActiveItem\n                                                    : textItem\n                                            )}\n                                        >\n                                            {characters ? name : title}\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })\n                        ) : (\n                            <TableRow>\n                                <TableCell\n                                    style={{ borderBottomColor: 'transparent' }}\n                                >\n                                    <Title\n                                        matches={matches}\n                                        style={{\n                                            fontSize: '4vmin',\n                                            textAlign: 'center',\n                                            color: '#000000',\n                                            padding: '2vmin',\n                                        }}\n                                    >\n                                        No hay{' '}\n                                        {characters\n                                            ? 'Personajes'\n                                            : 'Películas'}{' '}\n                                        disponibles\n                                    </Title>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n                {characters &&\n                    Object.keys(data).length > 0 &&\n                    data.results.length > 0 &&\n                    !isActive && (\n                        <div className={classes.buttonContainer}>\n                            <Fab\n                                variant=\"extended\"\n                                className={classes.button}\n                                onClick={seeMore}\n                                disabled={!data.next}\n                            >\n                                Ver más\n                            </Fab>\n                        </div>\n                    )}\n            </div>\n        </Paper>\n    )\n}\n\nexport default CustomTable\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst Text = ({ children, matches }) => {\n    const useStyles = makeStyles({\n        text: {\n            color: '#fff',\n            fontFamily: 'Starwars',\n            fontSize: matches ? '3.2vmin' : '3.7vmin',\n        },\n    })\n    const classes = useStyles()\n\n    return <h3 className={classes.text}>{children}</h3>\n}\n\nexport default Text\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport {\n    getCharacters,\n    setActiveCharacter,\n    searchCharacter,\n    setSearchCharacterActive,\n    handleNavigation,\n} from '../redux/actions'\n\nimport {\n    genderTranslate,\n    eyeColorTranslate,\n    massTranslate,\n    heightTranslate,\n} from '../utils/translate'\n\nimport routes from '../navigation/routes'\n\nimport TableWrapper from '../components/TableWrapper'\nimport DetailWrapper from '../components/DetailWrapper'\nimport CustomTable from '../components/CustomTable'\nimport Grid from '@material-ui/core/Grid'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Title from '../components/Title'\nimport Text from '../components/Text'\n\nconst { movies } = routes\n\nconst Characters = ({\n    characters,\n    getCharacters,\n    activeCharacter,\n    setActiveCharacter,\n    searchCharacter,\n    searchCharacterActive,\n    searchedCharacter,\n    setSearchCharacterActive,\n    handleNavigation,\n    history,\n}) => {\n    const matches = useMediaQuery('(min-width:600px)')\n\n    const handleOnSeeMore = () => {\n        if (characters.next) {\n            getCharacters(characters.next)\n        }\n    }\n\n    const { name, height, mass, eye_color, filmsList } = activeCharacter\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <TableWrapper matches={matches}>\n                    <CustomTable\n                        matches={matches}\n                        data={\n                            searchCharacterActive\n                                ? searchedCharacter\n                                : characters\n                        }\n                        seeMore={handleOnSeeMore}\n                        active={activeCharacter}\n                        setActiveItem={setActiveCharacter}\n                        search={searchCharacter}\n                        searchActive={setSearchCharacterActive}\n                        isActive={searchCharacterActive}\n                        characters\n                    />\n                </TableWrapper>\n            </Grid>\n            <Grid item xs={12}>\n                <DetailWrapper matches={matches}>\n                    {Object.keys(activeCharacter).length > 0 ? (\n                        <>\n                            <Title matches={matches}>Nombre: {name}</Title>\n                            <Text matches={matches}>\n                                - Color de ojos: {eyeColorTranslate(eye_color)}\n                            </Text>\n                            <Text matches={matches}>\n                                - Altura: {heightTranslate(height)}\n                            </Text>\n                            <Text matches={matches}>\n                                - Peso: {massTranslate(mass)}\n                            </Text>\n                            {filmsList.length > 0 && (\n                                <>\n                                    <Text matches={matches}>\n                                        - Peliculas en las que apareció:\n                                    </Text>\n                                    <ul>\n                                        {filmsList.map(item => {\n                                            const { title, url } = item\n                                            return (\n                                                <li\n                                                    key={url}\n                                                    onClick={() =>\n                                                        handleNavigation({\n                                                            key: movies,\n                                                            history,\n                                                            item,\n                                                        })\n                                                    }\n                                                    style={{\n                                                        color: '#fff',\n                                                        textDecoration:\n                                                            'underline',\n                                                        cursor: 'pointer',\n                                                    }}\n                                                >\n                                                    <Text matches={matches}>\n                                                        {title}\n                                                    </Text>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </>\n                            )}\n                        </>\n                    ) : (\n                        <Title\n                            matches={matches}\n                            style={{ fontSize: '9vmin', textAlign: 'center' }}\n                        >\n                            Elige un personaje!\n                        </Title>\n                    )}\n                </DetailWrapper>\n            </Grid>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    const {\n        characters,\n        activeCharacter,\n        searchCharacterActive,\n        searchedCharacter,\n    } = state\n    return {\n        characters,\n        activeCharacter,\n        searchCharacterActive,\n        searchedCharacter,\n    }\n}\n\nconst mapDispatchToProps = {\n    getCharacters,\n    setActiveCharacter,\n    searchCharacter,\n    setSearchCharacterActive,\n    handleNavigation,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters)\n","const genderTranslate = gender => {\n    switch (gender) {\n        case 'male':\n            return 'Masculino'\n            break\n        case 'female':\n            return 'Femenino'\n            break\n        case 'none':\n            return 'Androide'\n            break\n        case 'hermaphrodite':\n            return 'Hermafrodita'\n            break\n        case 'n/a':\n            return 'No aplica'\n            break\n        default:\n            return gender\n            break\n    }\n}\n\nconst massTranslate = mass => {\n    switch (mass) {\n        case 'unknown':\n            return 'desconocido'\n            break\n        default:\n            return mass + ' kg'\n            break\n    }\n}\n\nconst heightTranslate = height => {\n    switch (height) {\n        case 'unknown':\n            return 'desconocida'\n            break\n        default:\n            return height + ' cm'\n            break\n    }\n}\n\nconst eyeColorTranslate = eyeColor => {\n    switch (eyeColor) {\n        case 'blue':\n            return 'Azul'\n            break\n        case 'dark':\n            return 'oscuros'\n            break\n        case 'black':\n            return 'Negros'\n            break\n        case 'orange':\n            return 'Anaranjados'\n            break\n        case 'white':\n            return 'Blancos'\n            break\n        case 'green, yellow':\n            return 'verde, Amarillo'\n            break\n        case 'gold':\n            return 'Dorados'\n            break\n        case 'pink':\n            return 'Rosados'\n            break\n        case 'red, blue':\n            return 'Rojo, Azul'\n            break\n        case 'hazel':\n            return 'Avellana'\n            break\n        case 'blue-gray':\n            return 'Azul Claro'\n            break\n        case 'yellow':\n            return 'Amarillo'\n            break\n        case 'red':\n            return 'Rojo'\n            break\n        case 'brown':\n            return 'Castaño'\n            break\n        case 'unknown':\n            return 'desconocido'\n            break\n        default:\n            return eyeColor\n            break\n    }\n}\n\nexport { genderTranslate, eyeColorTranslate, massTranslate, heightTranslate }\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport {\n    setActiveMovie,\n    setSearchMovie,\n    searchMovieActive,\n    setSearchMovieActive,\n} from '../redux/actions'\n\nimport TableWrapper from '../components/TableWrapper'\nimport DetailWrapper from '../components/DetailWrapper'\nimport CustomTable from '../components/CustomTable'\nimport Grid from '@material-ui/core/Grid'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Title from '../components/Title'\nimport Text from '../components/Text'\n\nconst Movies = ({\n    movies,\n    activeMovie,\n    setActiveMovie,\n    setSearchMovie,\n    setSearchMovieActive,\n    searchMovieActive,\n    searchedMovie,\n}) => {\n    const matches = useMediaQuery('(min-width:600px)')\n\n    const { title, director, producer, release_date } = activeMovie\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <TableWrapper matches={matches}>\n                    <CustomTable\n                        matches={matches}\n                        data={searchMovieActive ? searchedMovie : movies}\n                        active={activeMovie}\n                        setActiveItem={setActiveMovie}\n                        search={setSearchMovie}\n                        searchActive={setSearchMovieActive}\n                    />\n                </TableWrapper>\n            </Grid>\n            <Grid item xs={12}>\n                <DetailWrapper matches={matches}>\n                    {Object.keys(activeMovie).length > 0 ? (\n                        <>\n                            <Title matches={matches}>Titulo: {title}</Title>\n                            <Text matches={matches}>\n                                - Director: {director}\n                            </Text>\n                            <Text matches={matches}>\n                                - Productor: {producer}\n                            </Text>\n                            <Text matches={matches}>\n                                - Fecha de estreno: {release_date}\n                            </Text>\n                        </>\n                    ) : (\n                        <Title\n                            matches={matches}\n                            style={{ fontSize: '9vmin', textAlign: 'center' }}\n                        >\n                            Elige un película!\n                        </Title>\n                    )}\n                </DetailWrapper>\n            </Grid>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    const { movies, activeMovie, searchedMovie, searchMovieActive } = state\n    return {\n        movies,\n        activeMovie,\n        searchedMovie,\n        searchMovieActive,\n    }\n}\n\nconst mapDispatchToProps = {\n    setActiveMovie,\n    setSearchMovie,\n    setSearchMovieActive,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies)\n","import React from 'react'\nimport Title from '../components/Title'\nimport Logo from '../assets/images/vader.png'\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <div className=\"avatar\">\n                <img src={Logo} alt=\"Dark Vader\" />\n            </div>\n            <div className=\"content\">\n                <Title>Cargando...</Title>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport Title from '../components/Title'\n\nconst NotFound = () => {\n    return (\n        <div className=\"not-found\">\n            <Title style={{ color: 'transparent' }}>\n                ======== May the force be with you ========\n            </Title>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useEffect } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { getCharacters, clearLoadingPage } from './redux/actions'\n\nimport routes from './navigation/routes'\n\nimport Layout from './components/Layout'\n\nimport Home from './containers/Home'\nimport Characters from './containers/Characters'\nimport Movies from './containers/Movies'\nimport Loading from './containers/Loading'\n\nimport NotFound from './containers/NotFound'\n\nconst { home, characters, movies } = routes\n\nconst App = ({ getCharacters, loadingPage, clearLoadingPage }) => {\n    useEffect(() => {\n        window.addEventListener('load', clearLoadingPage(false))\n        getCharacters()\n\n        return () => {\n            window.removeEventListener('load')\n        }\n    }, [])\n\n    if (loadingPage) {\n        return <Loading />\n    }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                <Switch>\n                    <Route exact path={home} component={Home} />\n                    <Route exact path={characters} component={Characters} />\n                    <Route exact path={movies} component={Movies} />\n                    <Route component={NotFound} />\n                </Switch>\n            </Layout>\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = state => {\n    const { loadingPage } = state\n    return {\n        loadingPage,\n    }\n}\n\nconst mapDispatchToProps = {\n    getCharacters,\n    clearLoadingPage,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import types from '../types'\nimport _ from 'lodash'\nimport { contains } from '../../utils/contains'\n\nconst reducers = (state, action) => {\n    switch (action.type) {\n        case types.SET_CHARACTERS:\n            if (Object.keys(state.characters).length > 0) {\n                let result = []\n\n                _.forEach(action.payload.results, item => {\n                    const index = _.findIndex(\n                        state.characters.results,\n                        characterItem => characterItem.url === item.url\n                    )\n                    if (index === -1) {\n                        result.push(item)\n                    }\n                })\n\n                const results = _.concat(state.characters.results, result)\n\n                return {\n                    ...state,\n                    characters: { ...action.payload, results },\n                }\n            } else {\n                return {\n                    ...state,\n                    characters: action.payload,\n                }\n            }\n\n        case types.SET_MOVIES:\n            return {\n                ...state,\n                movies: action.payload,\n            }\n\n        case types.SET_ACTIVE_CHARACTER:\n            return {\n                ...state,\n                activeCharacter: action.payload,\n            }\n\n        case types.SET_ACTIVE_MOVIE:\n            return {\n                ...state,\n                activeMovie: action.payload,\n            }\n\n        case types.SET_SEARCH_CHARACTER_ACTIVE:\n            return {\n                ...state,\n                searchCharacterActive: action.payload,\n            }\n\n        case types.SET_SEARCH_CHARACTER:\n            return {\n                ...state,\n                searchedCharacter: action.payload,\n            }\n\n        case types.SET_SEARCH_MOVIE_ACTIVE:\n            return {\n                ...state,\n                searchMovieActive: action.payload,\n            }\n\n        case types.SET_SEARCH_MOVIE:\n            const searchResults = _.filter(state.movies.results, item =>\n                contains(item, action.payload)\n            )\n\n            return {\n                ...state,\n                searchedMovie: { results: searchResults },\n                searchMovieActive: true,\n            }\n\n        case types.CLEAR_ACTIVE_CHARACTER:\n            return {\n                ...state,\n                activeCharacter: {},\n                searchCharacterActive: false,\n            }\n\n        // States\n        case types.IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload,\n            }\n\n        case types.CLEAR_LOADING_PAGE:\n            return {\n                ...state,\n                loadingPage: action.payload,\n            }\n\n        default:\n            return { ...state }\n    }\n}\n\nexport default reducers\n","export const contains = ({ title }, query) => {\n    const formatTitle = title.toLowerCase()\n    const formatQuery = query.toLowerCase()\n    if (formatTitle.includes(formatQuery)) {\n        return true\n    }\n\n    return false\n}\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport routes from '../../navigation/routes'\n\nimport reducers from '../reducers'\n\nconst { home } = routes\n\nconst INITIAL_STATE = {\n    characters: {},\n    activeCharacter: {},\n    movies: {},\n    activeMovie: {},\n    searchedCharacter: {},\n    searchedMovie: {},\n    searchCharacterActive: false,\n    searchMovieActive: false,\n    isLoading: false,\n    loadingPage: true,\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(\n    reducers,\n    INITIAL_STATE,\n    composeEnhancers(applyMiddleware(reduxThunk))\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\n\nimport { store } from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}